<?xml version='1.0'?>

<launch>
  <arg name="prefix" default="racecar"/>
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find racecar_gazebo)/config/gazebo_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="left_rear_wheel_velocity_controller right_rear_wheel_velocity_controller
                                            left_front_wheel_velocity_controller right_front_wheel_velocity_controller
                                            left_steering_hinge_position_controller right_steering_hinge_position_controller
                                            joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="joint_states" />
    <param name="publish_frequency" value="50" />
  </node>

  <!-- servo node -->
  <node pkg="racecar_gazebo" type="servo_commands.py" name="servo_commands" output="screen"/>

  <!-- Allow for Gazebo to broadcast odom -->
  <node pkg="racecar_gazebo" name="gazebo_odometry_node" type="gazebo_odometry.py" output="screen">
    <param name="publish_tf" value="true"/>
    <param name="link_prefix" value="$(arg prefix)"/>
    <param name="frame_id" value="$(arg prefix)/base_footprint"/>
    <param name="odom_frame_id" value="$(arg prefix)/odom"/>
    <remap from="odom" to="odometry/filtered"/>
  </node>

  <!-- Convert twist to ackermann -->
  <node pkg="racecar_gazebo" type="cmd_vel_to_ackermann_drive.py" name="cmd_vel_to_ackermann_drive">
    <param name="frame_id" value="$(arg prefix)/odom"/>
  </node>

</launch>
